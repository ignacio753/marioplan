{"version":3,"sources":["components/layouts/SignedInLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","console","log","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layouts_SignedInLinks","layouts_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getfirestore","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37bbabe4.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    console.log(props)\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={() => props.signOut()}>Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\" >{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","import { getFirestore } from \"../../../node_modules/redux-firestore\";\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            console.log('login successfulll')\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGN_OUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getfirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCESSS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <span className=\"card-title\">Notifications</span>\n                <ul className=\"notifications\">\n                    { notifications && notifications.map((item) => {\n                        return (\n                            <li key={item.id}>\n                                <span className=\"pink-text\">{item.user} </span>\n                                <span>{item.content}</span>\n                                <div className=\"grey-text note-date\">\n                                    {moment(item.time.toDate()).fromNow()}\n                                </div>\n                            </li>)\n                    }) }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>        \n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n            \n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    \n    render() {\n        const { projects, auth, notifications } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt','desc']},\n        { collection: 'notifications', limit: 3, orderBy: ['time','desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ project.title }</span>\n                        <p>{ project.content }</p>\n                    </div>\n                </div>\n                <div className=\"card-action gret lighten-4 grey-text\">\n                    <div>Posted by { project.authorFirstName} { project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n              <div className=\"input-field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"password\">Passowrd</label>\n                  <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                  <div className=\"red-text center\">\n                    { authError ? <p>{authError}</p> : null }\n                  </div>\n              </div>\n          </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n              <div className=\"input-field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n              </div>              \n              <div className=\"input-field\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                  <div className=\"red-text center\">\n                    { authError ? <p>{authError}</p> : null }\n                  </div>\n              </div>\n          </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n\n  render() {\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n              <div className=\"input-field\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"content\">Project Content</label>\n                  <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n              </div>\n          </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PPROJECT', project});\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\n        })\n        \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCESS':\n            return state;\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id:1, title:'title', content:'content'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT': \n            console.log('test')\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state;\n        default:\n            return state\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyCiOy-DUQLu4SvJOpQXAGiba0UIIc2a7_I\",\n    authDomain: \"ignacio-tech-marioplan.firebaseapp.com\",\n    databaseURL: \"https://ignacio-tech-marioplan.firebaseio.com\",\n    projectId: \"ignacio-tech-marioplan\",\n    storageBucket: \"ignacio-tech-marioplan.appspot.com\",\n    messagingSenderId: \"597283514662\"\n  };\n\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true })\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from  './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}